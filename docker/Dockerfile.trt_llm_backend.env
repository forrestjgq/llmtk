ARG BASE_IMAGE=""
ARG BASE_TAG=""

FROM ${BASE_IMAGE}:${BASE_TAG} as base

# setup proxy and git ids
ARG proxy_val=""
ARG LLMTK_COMMITID=""
ARG TRTLLM_COMMITID=""
ARG BACKEND_COMMITID=""
ARG IMAGE=""
ARG BASE_URL=""

ENV http_proxy=$proxy_val
ENV https_proxy=$proxy_val
ENV DEV_BASE_IMAGE=${BASE_URL}
ENV DEV_IMAGE=${IMAGE}
ENV DEV_LLMTK_COMMITID=$LLMTK_COMMITID
ENV DEV_TRTLLM_COMMITID=$TRTLLM_COMMITID
ENV DEV_BACKEND_COMMITID=$BACKEND_COMMITID

RUN apt-get update && apt-get install -y --no-install-recommends rapidjson-dev python-is-python3

COPY backend/requirements.txt /tmp/
RUN pip3 install -r /tmp/requirements.txt --extra-index-url https://pypi.ngc.nvidia.com

# Remove previous TRT installation
# We didn't remove libnvinfer* here because tritonserver depends on the pre-installed libraries.
RUN apt-get remove --purge -y tensorrt*
RUN pip3 uninstall -y tensorrt

FROM base as dev
ENV LD_LIBRARY_PATH=/usr/local/tensorrt/lib:${LD_LIBRARY_PATH}
ENV TRT_ROOT=/usr/local/tensorrt

WORKDIR /tmp
# requirements of backend and trtllm quantization
COPY backend backend
COPY quantization quantization
# scripts from trtllm/docker/common
COPY trtllm trtllm
# script from llmtk/script/install.sh
COPY install.sh install.sh

RUN pip3 install -r backend/requirements.txt --extra-index-url https://pypi.ngc.nvidia.com
RUN bash install.sh /tmp && rm -rf /tmp/*


ENV http_proxy=""
ENV https_proxy=""